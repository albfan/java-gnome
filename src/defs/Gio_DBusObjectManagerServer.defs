(define-object DBusObjectManagerServer
  (in-module "Gio")
  (import-header "gio/gdesktopappinfo.h")
  (import-header "gio/gfiledescriptorbased.h")
  (import-header "gio/gio.h")
  (import-header "gio/gunixconnection.h")
  (import-header "gio/gunixcredentialsmessage.h")
  (import-header "gio/gunixfdlist.h")
  (import-header "gio/gunixfdmessage.h")
  (import-header "gio/gunixinputstream.h")
  (import-header "gio/gunixmounts.h")
  (import-header "gio/gunixoutputstream.h")
  (import-header "gio/gunixsocketaddress.h")
  (parent "org.gnome.glib.Object")
  (c-name "GDBusObjectManagerServer")
)

(define-function DBusObjectManagerServer_new
  (is-constructor-of "GDBusObjectManagerServer")
  (c-name "g_dbus_object_manager_server_new")
  (return-type "GDBusObjectManagerServer*")
  (parameters
    '("const gchar*" "pobject_path")
  )
)

(define-method export
  (of-object "GDBusObjectManagerServer")
  (c-name "g_dbus_object_manager_server_export")
  (return-type "none")
  (parameters
    '("GDBusObjectSkeleton*" "pobject")
  )
)

(define-method export_uniquely
  (of-object "GDBusObjectManagerServer")
  (c-name "g_dbus_object_manager_server_export_uniquely")
  (return-type "none")
  (parameters
    '("GDBusObjectSkeleton*" "pobject")
  )
)

(define-method get_connection
  (of-object "GDBusObjectManagerServer")
  (c-name "g_dbus_object_manager_server_get_connection")
  (return-type "GDBusConnection*")
  (parameters
  )
)

(define-method is_exported
  (of-object "GDBusObjectManagerServer")
  (c-name "g_dbus_object_manager_server_is_exported")
  (return-type "gboolean")
  (parameters
    '("GDBusObjectSkeleton*" "pobject")
  )
)

(define-method set_connection
  (of-object "GDBusObjectManagerServer")
  (c-name "g_dbus_object_manager_server_set_connection")
  (return-type "none")
  (parameters
    '("GDBusConnection*" "pconnection")
  )
)

(define-method unexport
  (of-object "GDBusObjectManagerServer")
  (c-name "g_dbus_object_manager_server_unexport")
  (return-type "gboolean")
  (parameters
    '("const gchar*" "pobject_path")
  )
)

