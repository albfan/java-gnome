(define-object DesktopAppInfo
  (in-module "Gio")
  (import-header "gio/gdesktopappinfo.h")
  (import-header "gio/gfiledescriptorbased.h")
  (import-header "gio/gio.h")
  (import-header "gio/gunixconnection.h")
  (import-header "gio/gunixcredentialsmessage.h")
  (import-header "gio/gunixfdlist.h")
  (import-header "gio/gunixfdmessage.h")
  (import-header "gio/gunixinputstream.h")
  (import-header "gio/gunixmounts.h")
  (import-header "gio/gunixoutputstream.h")
  (import-header "gio/gunixsocketaddress.h")
  (parent "org.gnome.glib.Object")
  (c-name "GDesktopAppInfo")
)

(define-function DesktopAppInfo_new
  (is-constructor-of "GDesktopAppInfo")
  (c-name "g_desktop_app_info_new")
  (return-type "GDesktopAppInfo*")
  (parameters
    '("const char*" "pdesktop_id")
  )
)

(define-function DesktopAppInfo_new_from_filename
  (is-constructor-of "GDesktopAppInfo")
  (c-name "g_desktop_app_info_new_from_filename")
  (return-type "GDesktopAppInfo*")
  (parameters
    '("char*" "pfilename")
  )
)

(define-function DesktopAppInfo_new_from_keyfile
  (is-constructor-of "GDesktopAppInfo")
  (c-name "g_desktop_app_info_new_from_keyfile")
  (return-type "GDesktopAppInfo*")
  (parameters
    '("GKeyFile*" "pkey_file")
  )
)

(define-method get_action_name
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_action_name")
  (return-type "gchar*")
  (parameters
    '("const gchar*" "paction_name")
  )
)

(define-method get_boolean
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_boolean")
  (return-type "gboolean")
  (parameters
    '("const char*" "pkey")
  )
)

(define-method get_categories
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_categories")
  (return-type "const char*")
  (parameters
  )
)

(define-method get_filename
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_filename")
  (return-type "char*")
  (parameters
  )
)

(define-method get_generic_name
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_generic_name")
  (return-type "const char*")
  (parameters
  )
)

(define-method get_is_hidden
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_is_hidden")
  (return-type "gboolean")
  (parameters
  )
)

(define-method get_keywords
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_keywords")
  (return-type "none")
  (parameters
  )
)

(define-method get_nodisplay
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_nodisplay")
  (return-type "gboolean")
  (parameters
  )
)

(define-method get_show_in
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_show_in")
  (return-type "gboolean")
  (parameters
    '("const gchar*" "pdesktop_env")
  )
)

(define-method get_startup_wm_class
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_startup_wm_class")
  (return-type "const char*")
  (parameters
  )
)

(define-method get_string
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_get_string")
  (return-type "char*")
  (parameters
    '("const char*" "pkey")
  )
)

(define-method has_key
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_has_key")
  (return-type "gboolean")
  (parameters
    '("const char*" "pkey")
  )
)

(define-method launch_action
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_launch_action")
  (return-type "none")
  (parameters
    '("const gchar*" "paction_name")
    '("GAppLaunchContext*" "plaunch_context")
  )
)

(define-method launch_uris_as_manager
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_launch_uris_as_manager")
  (return-type "gboolean")
  (parameters
    '("GList*" "puris")
    '("GAppLaunchContext*" "plaunch_context")
    '("GSpawnFlags" "pspawn_flags")
    '("GSpawnChildSetupFunc" "puser_setup")
    '("gpointer" "puser_setup_data")
    '("GDesktopAppLaunchCallback" "ppid_callback")
    '("gpointer" "ppid_callback_data")
    '("GError**" "error")
  )
)

(define-method list_actions
  (of-object "GDesktopAppInfo")
  (c-name "g_desktop_app_info_list_actions")
  (return-type "none")
  (parameters
  )
)

